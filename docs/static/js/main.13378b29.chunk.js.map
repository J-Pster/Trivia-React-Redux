{"version":3,"sources":["trivia.png","reducers/player.js","reducers/index.js","store/index.js","components/Footer.js","actions/index.js","helpers/localstorage.js","helpers/api.js","pages/Login.js","pages/Settings.js","components/Header.js","components/Question.js","pages/Game.js","pages/Feedback.js","pages/Ranking.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","name","assertions","score","gravatarEmail","player","state","action","type","payload","email","rootReducer","combineReducers","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","window","Cypress","Footer","role","aria-label","React","Component","changeScore","setScore","getLocalToken","meuLocal","localStorage","getItem","setItem","setLocalToken","token","getLocalRanking","JSON","stringify","fetchTriviaToken","a","fetch","response","json","data","getTriviaToken","localToken","local","novoToken","testTriviaToken","meuToken","response_code","resetTriviaToken","startTriviaGame","ranking","parse","fetchTriviaQuestion","results","Login","props","changeInput","target","id","value","setState","buttonDisabled","emailValidation","nameValidation","onClickButton","loginInfo","dispatchLogin","api","API_GAME","console","log","this","test","length","className","src","logo","alt","htmlFor","required","data-testid","onChange","to","onClick","disabled","defaultProps","history","undefined","connect","dispatch","actions","Settings","Header","emailHash","md5","toString","Question","componentDidMount","timer","countdown","setInterval","setCountdown","clearInterval","timeout","showAnswers","answers","map","answer","index","correct","key","checkAnswers","replaceCharacters","countScore","question","hard","medium","easy","difficulty","e","enableNext","innerHTML","find","changeButtonColors","correctButtons","document","querySelectorAll","wrongButtons","forEach","button","style","backgroundColor","border","lockButtons","string","replace","category","Game","createAnswers","allQuestions","incorrectAnswers","incorrect_answers","correct_answer","concat","sortedAnswers","sort","Math","random","prevState","allAnswers","push","loading","showQuestion","changeQuestion","next","Feedback","Ranking","addLocalRanking","storage","picture","meuNovoLocal","emOrdem","players","b","parseInt","dispatchZerar","nameHeader","scoreHeader","App","exact","path","component","ReactDOM","render","basename","Store","getElementById"],"mappings":"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","file":"static/js/main.13378b29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trivia.466d153e.png\";","// Esse reducer será responsável por tratar as informações da pessoa usuária\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n};\n\nfunction player(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case 'LOGIN_USER':\n    return {\n      ...state,\n      name: action.payload.name,\n      gravatarEmail: action.payload.email,\n    };\n  case 'CHANGE_SCORE':\n    return {\n      ...state,\n      score: state.score + action.payload.score,\n      assertions: state.assertions + action.payload.assertions,\n    };\n  case 'RESET_STORE':\n    return {\n      ...state,\n      name: '',\n      gravatarEmail: '',\n      score: 0,\n      assertions: 0,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default player;\n","import { combineReducers } from 'redux';\nimport player from './player';\n\nconst rootReducer = combineReducers({ player });\n\nexport default rootReducer;\n","import { legacy_createStore as createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport '../index.css';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer>\n        <p>\n          Feito com\n          {' '}\n          <span role=\"img\" aria-label=\"Heart\">❤️</span>\n          {' '}\n          por João Pster, Luísa V. Boas, Jamile, Guilherme S. Garcia.\n        </p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","export const loginUser = (loginInfo) => ({\n  type: 'LOGIN_USER',\n  payload: {\n    name: loginInfo.name,\n    email: loginInfo.email,\n  },\n});\n\nexport const changeScore = (setScore) => ({\n  type: 'CHANGE_SCORE',\n  payload: {\n    score: setScore.score,\n    assertions: setScore.assertions,\n  },\n});\n\nexport const reset = () => ({ type: 'RESET_STORE' });\n","export const getLocalToken = () => {\n  const meuLocal = localStorage.getItem('token');\n  if (meuLocal) {\n    return meuLocal;\n  }\n\n  const meuNovoLocal = '';\n\n  localStorage.setItem('token', meuNovoLocal);\n  return localStorage.getItem('token');\n};\n\nexport const setLocalToken = (token) => {\n  localStorage.setItem('token', token);\n};\n\nexport const getLocalRanking = () => {\n  const meuLocal = localStorage.getItem('ranking');\n  if (meuLocal) {\n    return meuLocal;\n  }\n\n  const meuNovoLocal = [];\n\n  localStorage.setItem('ranking', JSON.stringify(meuNovoLocal));\n  return localStorage.getItem('ranking');\n};\n\nexport const addLocalRanking = (name, score, picture) => {\n  const meuLocal = JSON.parse(getLocalRanking);\n  const meuNovoLocal = [...meuLocal, { name, score, picture }];\n  localStorage.setItem('ranking', JSON.stringify(meuNovoLocal));\n};\n\n// export default getLocalToken;\n","import * as local from './localstorage';\n\nconst URL_TRIVIA_TOKEN = 'https://opentdb.com/api_token.php?command=request';\nconst URL_TRIVIA_QUESTION = 'https://opentdb.com/api.php?amount=5&token=';\n\n// Pega um token pelo fetch.\nexport const fetchTriviaToken = async () => {\n  const response = await fetch(URL_TRIVIA_TOKEN);\n  const data = await response.json();\n  return data.token;\n};\n\n// UTILIZE ESSA FUNÇÃO PARA PEGAR O TOKEN\nconst getTriviaToken = async () => {\n  // Pega o token do local storage.\n  const localToken = local.getLocalToken();\n  if (localToken) return localToken;\n\n  // Gera um novo token se o do local não existir, e seja o token gerado no local.\n  const novoToken = await fetchTriviaToken();\n  local.setLocalToken(novoToken);\n  if (novoToken) return novoToken;\n};\n\n// Testa o token atual\nconst testTriviaToken = async () => {\n  // Pega o token, e verifica se ele não é vazio.\n  const meuToken = await getTriviaToken();\n  if (meuToken === null || meuToken === '') return false;\n\n  // Depois do teste de cima, ele testa se o token é válido\n  const response = await fetch(URL_TRIVIA_QUESTION + meuToken);\n  const data = await response.json();\n  if (data.response_code === 0) return true;\n\n  // Caso não seja válido, ele retorna falso.\n  return false;\n};\n\n// Reseta o token atual\nconst resetTriviaToken = async () => {\n  const novoToken = await fetchTriviaToken();\n  local.setLocalToken(novoToken);\n  return null; // para que a tela retorne a página de login\n};\n\n// UTILIZE ESSA FUNÇÃO PARA COMEÇAR O GAME.\nexport const startTriviaGame = async () => {\n  // Começa o jogo, testando ou criando um token no localStorage\n  if (!await testTriviaToken()) await resetTriviaToken();\n  const token = await getTriviaToken();\n  const ranking = JSON.parse(local.getLocalRanking());\n  return { token, ranking };\n};\n\n// USAR ESSA FUNÇÃO PARA PEGAR PERGUNTAS\nexport const fetchTriviaQuestion = async () => {\n  // Testando se o token está válido, se não, reseta o token.\n  if (!await testTriviaToken()) {\n    return resetTriviaToken();\n    // retorna null que fará retornar a pag de login\n  }\n  // Fazendo o fetch nas perguntas.\n  const token = await getTriviaToken();\n  const response = await fetch(URL_TRIVIA_QUESTION + token);\n  const data = await response.json();\n  return data.results;\n};\n\nexport default fetchTriviaToken;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Login.css';\nimport logo from '../trivia.png';\nimport Footer from '../components/Footer';\nimport * as actions from '../actions';\nimport * as api from '../helpers/api';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      buttonDisabled: true,\n    };\n  }\n\n  changeInput = ({ target }) => {\n    const { id, value } = target;\n    this.setState({ [id]: value });\n\n    this.setState({ buttonDisabled: true }, () => {\n      if (this.emailValidation() && this.nameValidation()) {\n        this.setState({\n          buttonDisabled: false,\n        });\n      }\n    });\n  }\n\n  onClickButton = async () => {\n    // Redux\n    const { name, email } = this.state;\n    const loginInfo = { name, email };\n    const { dispatchLogin } = this.props;\n    dispatchLogin(loginInfo);\n\n    // Api\n    const API_GAME = await api.startTriviaGame();\n    console.log(API_GAME);\n\n    // Redirect\n    // const { history } = this.props;\n    // history.push('/game');\n  };\n\n  emailValidation() {\n    const { email } = this.state;\n    const regex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n    if (!email || regex.test(email) === false) {\n      return false;\n    }\n\n    return true;\n  }\n\n  nameValidation() {\n    const { name } = this.state;\n    const minLeg = 3;\n    if (name.length < minLeg) {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    // const { history } = this.props;\n    const { name, email, buttonDisabled } = this.state;\n\n    return (\n      <div className=\"Login\">\n        <div className=\"Login-body\">\n          <img src={ logo } className=\"Login-logo\" alt=\"logo\" />\n          <div className=\"form-group form\">\n            <h4>Bem vindo, faça login para jogar.</h4>\n            <label htmlFor=\"name\">\n              Nome:\n              {' '}\n              <input\n                required\n                data-testid=\"input-player-name\"\n                className=\"form-control\"\n                id=\"name\"\n                type=\"text\"\n                value={ name }\n                onChange={ this.changeInput }\n              />\n            </label>\n            <label htmlFor=\"email\">\n              E-mail:\n              {' '}\n              <input\n                required\n                data-testid=\"input-gravatar-email\"\n                className=\"form-control\"\n                id=\"email\"\n                type=\"email\"\n                value={ email }\n                onChange={ this.changeInput }\n              />\n            </label>\n            <Link to=\"/game\">\n              <input\n                data-testid=\"btn-play\"\n                className=\"btn btn-primary\"\n                type=\"button\"\n                onClick={ this.onClickButton }\n                value=\"Play\"\n                disabled={ buttonDisabled }\n              />\n            </Link>\n            <Link to=\"/settings\">\n              <input\n                data-testid=\"btn-settings\"\n                className=\"btn btn-primary\"\n                type=\"button\"\n                // onClick={ () => { history.push('/settings'); } }\n                value=\"Configurações\"\n              />\n            </Link>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape(PropTypes.object),\n  dispatchLogin: PropTypes.func,\n}.isRequired;\n\nLogin.defaultProps = {\n  history: undefined,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchLogin: (loginInfo) => dispatch(actions.loginUser(loginInfo)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\n\nclass Settings extends Component {\n  render() {\n    return (\n      <h1 data-testid=\"settings-title\">Configurações</h1>\n    );\n  }\n}\n\nexport default Settings;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport logo from '../trivia.png';\nimport './Header.css';\n\nclass Header extends Component {\n  render() {\n    const { name, score, gravatarEmail } = this.props;\n    const emailHash = md5(gravatarEmail).toString();\n\n    return (\n      <div className=\"container-user-info\">\n        <img src={ logo } className=\"Trivia-logo Login-logo\" alt=\"logo\" />\n        <div className=\"usuario\">\n          <div className=\"jogador\">\n            <h6>Jogador</h6>\n            <p data-testid=\"header-player-name\">{name}</p>\n          </div>\n          <div className=\"pontuacao\">\n            <h6>Pontuação</h6>\n            <p data-testid=\"header-score\">{score}</p>\n          </div>\n        </div>\n        <img\n          data-testid=\"header-profile-picture\"\n          className=\"avatar\"\n          src={ `https://www.gravatar.com/avatar/${emailHash}` }\n          alt={ `Gravatar de ${name}` }\n        />\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  gravatarEmail: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  name: state.player.name,\n  score: state.player.score,\n  gravatarEmail: state.player.gravatarEmail,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Question.css';\nimport { changeScore } from '../actions';\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: 30,\n      timeout: false,\n    };\n  }\n\n  componentDidMount = () => {\n    const interval = 1000;\n    const { timer } = this.state;\n    const countdown = setInterval(this.setCountdown, interval);\n    if (!timer) {\n      clearInterval(countdown);\n    }\n  }\n\n  setCountdown = () => {\n    const { timer } = this.state;\n    if (timer > 0) {\n      this.setState(() => ({ timer: timer - 1 }));\n    }\n    if (!timer) {\n      this.setState(({ timeout: true }));\n    }\n  }\n\n  showAnswers = () => {\n    const { answers } = this.props;\n    if (!answers) return <h2>Carregando...</h2>;\n    const { timeout } = this.state;\n    return answers.map((answer, index) => (\n      <button\n        data-testid={ answer.correct ? 'correct-answer' : `wrong-answer-${index}` }\n        key={ index }\n        type=\"button\"\n        className=\"btn btn-secondary\"\n        disabled={ timeout }\n        onClick={ this.checkAnswers }\n      >\n        {this.replaceCharacters(answer.answer)}\n      </button>\n    ));\n  }\n\n  countScore = () => {\n    const { timer } = this.state;\n    const { question, dispatch } = this.props;\n    // eu já disse que odeio o lint e o magicNumbers hoje? // somos 2!!\n    const ten = 10;\n    const three = 3;\n    const hard = ten + (timer * three);\n    const medium = ten + (timer * 2);\n    const easy = ten + timer;\n    const assertions = 1;\n    if (question.difficulty === 'hard') {\n      dispatch(changeScore({ score: hard, assertions }));\n    }\n    if (question.difficulty === 'medium') {\n      dispatch(changeScore({ score: medium, assertions }));\n    }\n    if (question.difficulty === 'easy') {\n      dispatch(changeScore({ score: easy, assertions }));\n    }\n  }\n\n  checkAnswers = (e) => {\n    const { answers } = this.props;\n    const { timeout } = this.state;\n    const { enableNext } = this.props;\n    if (timeout) return;\n\n    const answer = e.target.innerHTML;\n    const correctAnswer = answers.find((a) => a.answer === answer).correct;\n    if (correctAnswer) this.countScore();\n\n    this.changeButtonColors();\n    enableNext();\n  }\n\n  changeButtonColors = () => {\n    const { timeout } = this.state;\n    if (timeout) return;\n\n    const correctButtons = document.querySelectorAll('[data-testid=\"correct-answer\"]');\n    const wrongButtons = document.querySelectorAll('[data-testid^=\"wrong-answer\"]');\n\n    correctButtons.forEach((button) => {\n      button.style.backgroundColor = 'rgb(6, 240, 15)';\n      button.style.border = '3px solid rgb(6, 240, 15)';\n    });\n\n    wrongButtons.forEach((button) => {\n      button.style.backgroundColor = 'red';\n      button.style.border = '3px solid red';\n    });\n  }\n\n  lockButtons = () => {\n    this.setState(() => ({\n      timeout: true,\n    }));\n  }\n\n  replaceCharacters = (string) => string.replace(/&quot;/img, '\"')\n    .replace(/&#039;|&prime;|&rsquo;/img, '´')\n    .replace(/&atilde;/img, 'ã')\n    .replace(/&otilde;/img, 'õ')\n    .replace(/&ntilde;/img, 'ñ')\n    .replace(/&eacute;/img, 'é')\n    .replace(/&aacute;/img, 'á')\n    .replace(/&agrave;/img, 'à')\n    .replace(/&egrave;/img, 'è')\n    .replace(/&auml;/img, 'ä')\n    .replace(/&ouml;/img, 'ö')\n    .replace(/&acirc;/img, 'â')\n    .replace(/&ecirc;/img, 'ê')\n    .replace(/&ocirc;/img, 'ô')\n    .replace(/&ccedil;/img, 'ç')\n    .replace(/&amp;/img, '&')\n\n  render() {\n    const { timer } = this.state;\n    const { question } = this.props;\n    const almostOutOfTime = 6;\n    return (\n      <>\n        <h3 className={ timer < almostOutOfTime && 'timer' }>{timer}</h3>\n        <h3 data-testid=\"question-category\">{question.category}</h3>\n        <h1 data-testid=\"question-text\">\n          {this.replaceCharacters(question.question)}\n\n        </h1>\n        <div data-testid=\"answer-options\" className=\"answers-list\">\n          {this.showAnswers()}\n        </div>\n      </>\n    );\n  }\n}\n\nQuestion.propTypes = {\n  answers: PropTypes.arrayOf(PropTypes.shape({ answer: PropTypes.string })),\n  question: PropTypes.string,\n}.isRequired;\n\nexport default connect()(Question);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { fetchTriviaQuestion } from '../helpers/api';\nimport Question from '../components/Question';\nimport './Game.css';\n\nclass Game extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      next: false,\n      index: 0,\n      allQuestions: [],\n      allAnswers: [],\n    };\n  }\n\n  createAnswers = (allQuestions) => {\n    allQuestions.forEach((question) => {\n      const {\n        incorrect_answers: incorrectAnswers,\n        correct_answer: correctAnswer,\n      } = question;\n      const answers = [{ answer: correctAnswer, correct: true }]\n        .concat(incorrectAnswers.map((answer) => ({ answer, correct: false })));\n\n      const sortNumber = 0.5;\n      const sortedAnswers = answers.sort(() => Math.random() - sortNumber);\n\n      this.setState((prevState) => ({\n        allAnswers: [...prevState.allAnswers, sortedAnswers],\n      }));\n    });\n  }\n\n  componentDidMount = async () => {\n    const { history } = this.props;\n    const allQuestions = await fetchTriviaQuestion();\n    if (allQuestions === null) history.push('/');\n\n    this.setState({\n      loading: false,\n      index: 0,\n      allQuestions,\n    }, () => this.createAnswers(allQuestions));\n  }\n\n  showQuestion = () => {\n    const { allQuestions, allAnswers, index, loading } = this.state;\n\n    if (loading) return <h1>Carregando...</h1>;\n    return (<Question\n      key={ index }\n      question={ allQuestions[index] }\n      answers={ allAnswers[index] }\n      enableNext={ this.enableNext }\n    />);\n  }\n\n  changeQuestion = () => {\n    const { index, allQuestions } = this.state;\n    const { history } = this.props;\n\n    if (index === allQuestions.length - 1) {\n      history.push('/feedback');\n    } else {\n      this.setState((prevState) => ({\n        index: prevState.index + 1,\n      }), () => { this.setState({ next: false }); });\n    }\n  }\n\n  enableNext = () => {\n    this.setState({\n      next: true,\n    });\n  }\n\n  render() {\n    const { next } = this.state;\n    return (\n      <div className=\"game-page\">\n        <Header />\n        <div className=\"game-container content-wrap\">\n          { this.showQuestion() }\n          { next && (\n            <button\n              data-testid=\"btn-next\"\n              type=\"button\"\n              onClick={ this.changeQuestion }\n            >\n              Próxima pergunta\n            </button>\n          )}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  history: PropTypes.shape(PropTypes.object),\n  dispatchLogin: PropTypes.func,\n}.isRequired;\n\nGame.defaultProps = {\n  history: undefined,\n};\n\nexport default Game;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport './Feedback.css';\n\nclass Feedback extends Component {\n  render() {\n    const { assertions, score } = this.props;\n    const condition = 3;\n    return (\n      <div className=\"feedback-page\">\n        <Header />\n        <div className=\"feedback-container content-wrap\">\n          <div data-testid=\"feedback-text\">\n            {assertions < condition ? 'Could be better...' : 'Well Done!'}\n          </div>\n          <div>\n            Pontuação final:\n            <span data-testid=\"feedback-total-score\">{score}</span>\n          </div>\n          <div>\n            Respostas certas:\n            <span data-testid=\"feedback-total-question\">{assertions}</span>\n          </div>\n          <Link to=\"/\">\n            <input\n              data-testid=\"btn-play-again\"\n              type=\"button\"\n              value=\"Jogar Novamente\"\n            />\n          </Link>\n          <Link to=\"/ranking\">\n            <input\n              data-testid=\"btn-ranking\"\n              type=\"button\"\n              value=\"Ranking\"\n            />\n          </Link>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  name: state.player.name,\n  gravatarEmail: state.player.gravatarEmail,\n  assertions: state.player.assertions,\n  score: state.player.score,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport { reset } from '../actions/index';\nimport logo from '../trivia.png';\nimport Footer from '../components/Footer';\nimport './Ranking.css';\n\nclass Ranking extends Component {\n  constructor() {\n    super();\n    this.state = {\n      storage: [],\n    };\n  }\n\n  componentDidMount = async () => {\n    const { name, score, gravatarEmail } = this.props;\n    const emailHash = md5(gravatarEmail).toString();\n    this.addLocalRanking(name, score, emailHash);\n    this.setState({\n      storage: JSON.parse(localStorage.getItem('ranking')),\n    });\n  };\n\n  getLocalRanking = () => {\n    const meuLocal = localStorage.getItem('ranking');\n    if (meuLocal) {\n      return meuLocal;\n    }\n    const meuNovoLocal = [];\n    localStorage.setItem('ranking', JSON.stringify(meuNovoLocal));\n    return localStorage.getItem('ranking');\n  };\n\n  addLocalRanking = (name, score, picture) => {\n    const meuLocal = JSON.parse(this.getLocalRanking());\n    const meuNovoLocal = [...meuLocal, { name, score, picture }];\n    localStorage.setItem('ranking', JSON.stringify(meuNovoLocal));\n  };\n\n  emOrdem = (players) => {\n    const menos1 = -1;\n    players.sort((a, b) => {\n      if (parseInt(a.score, 10) > parseInt(b.score, 10)) {\n        return menos1;\n      }\n      if (parseInt(a.score, 10) < parseInt(b.score, 10)) {\n        return 1;\n      }\n      return 0;\n    });\n    return players;\n  }\n\n  render() {\n    const { dispatchZerar } = this.props;\n    const { storage } = this.state;\n    const ranking = this.emOrdem(storage);\n    const { name: nameHeader, score: scoreHeader, gravatarEmail } = this.props;\n    const picture = md5(gravatarEmail).toString();\n\n    return (\n      <div className=\"ranking-page\">\n        <div className=\"container-user-info\">\n          <img src={ logo } className=\"Trivia-logo Login-logo\" alt=\"logo\" />\n          <div className=\"usuario\">\n            <div className=\"jogador\">\n              <h6>Jogador</h6>\n              <p>{nameHeader}</p>\n            </div>\n            <div className=\"pontuacao\">\n              <h6>Pontuação</h6>\n              <p>{scoreHeader}</p>\n            </div>\n          </div>\n          <img\n            data-testid=\"header-profile-picture\"\n            className=\"avatar\"\n            src={ `https://www.gravatar.com/avatar/${picture}` }\n            alt={ `Gravatar de ${nameHeader}` }\n          />\n        </div>\n        <h1 data-testid=\"ranking-title\">RANKING</h1>\n        <div className=\"ranking-container content-wrap\">\n          {ranking.map(({ name, score, emailHash }, index) => (\n            <div key={ index } className=\"ranking-item\">\n              <h4>\n                <span>\n                  {`${index + 1}º. `}\n                  {' '}\n                </span>\n                <span data-testid={ `player-name-${index}` }>{name}</span>\n              </h4>\n              <h4 data-testid={ `player-score-${index}` }>{score}</h4>\n              <img\n                className=\"avatar\"\n                src={ `https://www.gravatar.com/avatar/${emailHash}` }\n                alt={ `Gravatar de ${name}` }\n              />\n            </div>\n          ))}\n          <Link to=\"/\">\n            <input\n              data-testid=\"btn-go-home\"\n              type=\"button\"\n              value=\"Inicio\"\n              onClick={ () => dispatchZerar() }\n            />\n          </Link>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nRanking.propTypes = {\n  name: PropTypes.string.isRequired,\n  gravatarEmail: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  dispatchZerar: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  name: state.player.name,\n  gravatarEmail: state.player.gravatarEmail,\n  assertions: state.player.assertions,\n  score: state.player.score,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchZerar: () => { dispatch(reset()); },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ranking);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Settings from './pages/Settings';\nimport Game from './pages/Game';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\n\nexport default function App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/settings\" component={ Settings } />\n      <Route exact path=\"/game\" component={ Game } />\n      <Route exact path=\"/feedback\" component={ Feedback } />\n      <Route exact path=\"/ranking\" component={ Ranking } />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Store from './store/index';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <HashRouter basename=\"/\">\n      <Provider store={ Store }>\n        <App />\n      </Provider>\n    </HashRouter>\n  </BrowserRouter>,\n\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}